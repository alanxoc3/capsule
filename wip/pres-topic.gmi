---
title: the wonderful world of the command line
author: alan morgan
---

welcome to the command line  :)

# who am i?
* i work at clearwater analytics
* i have been using linux for 10 years
* i love the command line

# history of terminal emulators
* teleprinter/teletype: teletype model 33, creed model 7
* computer terminals: datapoint 3300, ibm 2250, vt100 adm-3a
* terminal emulators: xterm, kitty, alacritty, windows terminal

linux running on a 1930 teletype:

https://www.youtube.com/watch?v=2XLZ4Z8LpEE

# history of unix shells
* v6: original shell for unix system written by ken thompson
* sh: bourne shell replaced v6 as the default unix shell
* bash: bourne again shell is a rewrite of bourne shell
* zsh/dash/fish/ksh/nushell... many modern shells

# browsing the file system
* cd, ls, pwd, exit, cat
* ranger
* locate, updatedb, grep
* rg, fzf, fd, exa

# history of cli editors
* ed, em, en, ex, vi: early unix editors some written for teleprinters
* vim, neovim, emacs, kakoune, nano: modern editors

# env vars, shell functions, aliases

# navigating git
* git, diff-so-fancy

# shell built-ins vs utilities
* builtins: exit, cd, 

# important programs in my workflow
* fzf: fuzzy find
* rg: ripgrep

# browsing the web
* gemini/gopher
* w3m
* lynx
* browsh

# social
* irssi - irc
* himalaya/mutt - email

# hello

https://en.wikipedia.org/wiki/Command-line_interface#History

# what is posix and why should i care?
posix is a standard. we can't have a powerful commandline if no one followed any standard whatsoever. there would be too many incompatible implementations if that was the case.


presenter: alan morgan

Some silly linux CLI things:
https://opensource.com/article/18/12/linux-toy-boxes


what is posi

todo: use this: https://github.com/concise/tmux-keylogger

https://xoc3.io/2021-11-17

# ideas
* don't be afraid to look in random directories on your computer. you might learn something.
* must have: fzf! show example usage for fzf.

# cheatsheets
tldr:  https://github.com/tldr-pages/tldr
navi:  https://github.com/denisidoro/navi
cheat: https://github.com/cheat/cheat

# summary
developers often overlook the power of the command line. while gui tools may
seem easier to use, they lack scripting ability and are often slower than their
command line counterparts. so let's see how powerful the command line really
is!

the main objective of this presentation is to inspire you to start using the
command line a bit more than you already do. because of this objective, less
time is spent explaining specifics in order to have more time to grab your
attention with a variety of different tools and command line related topics.

the entire presentation is completely contained within a terminal interface and
consists of mostly live demos. some of the tools and topics that will be
covered include: posix, unix, terminal emulators, shells, man pages, aliases,
env vars, multiplexers, modal editors, irc, email, internet, multimedia, and
lots of modern cli apps.

because of the posix/unix nature of the presentation, most of the tools covered
in the presentation are transferrable between linux, wsl, and mac. this
presentation should be informative to both junior and senior developers alike,
no matter what one's command line skills are.

pass, fzf, fd, rg, ranger, diff-so-fancy, nvim, kak, w3m, lynx, irssi, lam, asciinema

docker run --rm -it browsh/browsh

git.io/devcon2021 ?
xoc3.io/pres/devcon2021 ?

https://github.com/alacritty/alacritty/issues/3129

# ---------------------------------------------------------------- #

Your Name: Alan Morgan

Your Title: Software Engineer

Write a statement for us to use on companyâ€™s website, using 200 words or less:

Alan started programming after accidentally replacing Windows with Linux on his laptop in high school 10 years ago. Since then he has become so attached to command line interfaces that it's now difficult for him to use any computer without opening up a terminal emulator. This has, in part, influenced him to be a strong advocate of the Unix Philosophy, especially the "write programs that do one thing and do it well" aspect of it. In addition to using/writing CLI applications, Alan also likes to create PICO-8 games, play the piano, and learn languages when he finds free time.
