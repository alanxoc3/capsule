#- no more pgp for me

it all started when i wanted to find a cli based pgp utility that was simpler than gnupg. i've been using gnupg off and on for years and if you have tried it, you'd know too how terrible of a user experience it gives you. my search led me to trying out sequoia:

=> https://sequoia-pgp.org/ sequoia

the commandline interface for sequoia is very nice, but it's not a complete pgp implementation yet. i quickly came into a current limitation with the project when i tried to manage my gnupg subkeys. my curiosity led me to reading the pgp specification and trying to understand the packet structure of private/public keys.

=> https://datatracker.ietf.org/doc/html/rfc4880 pgp specification

after a day and a half of nonsense, i started wondering if there are any good pgp replacements. specifically wondering about a more minimalistic approach to the various encryption services pgp provides. that led me to this article, which i strongly recommend you reading:

=> https://latacora.micro.blog/2019/07/16/the-pgp-problem.html the pgp problem

a few highlights of what the article tries to convey:

* pgp is old and painful to manage
* the poster-child implementation is terrible
* most people don't actually use the web of trust
* there are some modern alternatives that can replace parts of pgp

the rest of this post is about my migration journey away from pgp/gnupg.

my use cases for pgp were primarily for encrypting passwords and signing git commits. the utility i migrated to is called "age". here's a link:

=> https://github.com/FiloSottile/age age




luckily, my gpg key isn't even on a keyserver and i'm pretty sure no one relies on it besides myself. so no need for a revocation certificate. 


so 






## password store

## git commit signing


starting with the big one, storing passwords with pass.

'm changing my  and how i post

i'm convinced, so i started migrating to other tools. i'll spend the rest of this article explaining myhow i migrate away from gnupg.



'm still tri'm putting up up with all of this. asked realized why have i been putting

do i of trying to understand the inner workings of pgp and how to migrate to sequoia, i asked myself why does this protocol and the related tooling need to be so complex. that question quickly led me to an article i strongly recommend you reading too:


after going through that article, i decided to give up on pgp.

pgp 


but there are many issuesh


plus being able to idealiving j

https://github.com/FiloSottile/age
https://github.com/jedisct1/minisign
https://github.com/biox/pa
https://leahneukirchen.org/dotfiles/bin/git-signify
