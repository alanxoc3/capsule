=> gemini://alanxoc3.xyz ← alanxoc3.xyz

# concards
concards is my cli based flashcard program. i haven't been able to find a flashcard program that works how i want, so i made another flashcard program. but this one has some key differences than any flashcard program i've found:
* concards is a cli first app, which means it is designed to interact fluently with other cli programs.
* flashcards can be embedded along with your notes in a plain text file format of your choosing (txt, md, asciidoc...).
* you can edit flashcards as you review them, with your favorite editor (preferably a cli-based editor, but it doesn't have to be one).
* plugins and configuration will work with shell scripting and hooks. currently there is limited support for this.

i use concards often, it has a few releases, and it has a few stars on github. you can check it out and let me know what you think.
=> https://git.io/concards

concards is still in alpha, which means there are a few things i still plan on redesigning. but a lot of the basics will remain the same.

(this page is still a wip.)

## design workspace
this is where i write to myself about how i want to design things in concards. i'll delete and write new things in here often.

```
saluton                     hi                     2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
你好                        hello                  2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2

hi                          saluton                2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
hello                       你好                   2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2

hi                          你好                   00:00 7 1 6 sm2
你好                        hi                     00:00 7 1 6 sm2
```

if this is a new card and the question matches the question of an existing card, then copy the meta info of the existing card. if the question does not match the question of any existing card, then check if the answer matches an existing answer. if the answer does match an existing answer, copy the meta information of that card. if the match is also new, don't bother copying any information.

if the question matches an existing question and the answer matches an existing answer, then 

questions are just as valid as answers. how to decide base value when there are multiple matches?

when the question matches, the answer is incorrect. when the question matches, the answer is correct.

no, when the question matches, the answer is still correct.

again, how to determine merging? well, what are the possibilities?
* average out the values of all matches.
* take the match with the highest streak.
* take the match with the latest next review date.

also, should cards with multiple sides be presented together? well, yeah i think so. but how would reviewing work in that scenario? ideally, all possible answers would be presented at once. reviewing options:
* keep all answers in sync with each other. so, if one answer isn't available, then don't review it.
* if an answer doesn't need to be reviewed right now, then don't include it in the side. but if 2 answers need to be reviewed, then do include them together. the answer with the most recent date will be used. the metas will update separately.

is chaining answers a good idea? well, yes. it's very useful actually. with the above examples, a chain could give you a card that looks like this:
```
with only question -> answer chaining:
saluton | hi | 你好

with question -> answer and answer -> question chaining:
saluton | hi | 你好 | hello

without chaining:
saluton | hi
```

would a chain be more like notes, or would it be more like separate cards? so far my concern with it being separate cards is that a person didn't explicitly make the chain, whereas the user explicitly made every other card. also, chains could add to the card count quite a bit. chains are also dependent on whether or not other cards are loaded.

if it's annoying to add cards to chains, is it annoying to manage multiple cards with the same question in general? well, if you review the card in a context where only one of its sides is present, the other side shouldn't have a review.

tangent. how would the file the card came from be displayed, if multiple answers are combined or if chaining is a thing. each answer came from a file somewhere, so that could technically be tracked. maybe it could be displayed just with the info command.

also, if chaining made multiple cards, merging might be more tricky, because there are more choices to choose from.

keeping a hash of only the one side solves the issue of chaining, but it makes a card not reproduce-able.... no. keeping only a hash of the question side means i lose too much information. instead i will need to figure out merging or something.

```
hi | yo
34b7d7134bbd213fb5df13bbcdb14bf0 13eb7d313abed31bc31badb3cbbd41f0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2

你好 | hello | hi | hey | saluton
14e777374abe234fc51facb9c3b14bf0 14e777374abe234fc51facb9c3b14bf0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
14e777374abe234fc51facb9c3b14bf0 34b7d7134bbd213fb5df1cb9c3b14bf0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
14e777374abe234fc51facb9c3b14bf0 14e37b3d41b32b4dc113abbd31b1db10 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
14e777374abe234fc51facb9c3b14bf0 34b733b3db1db3db3d31bdd133b1db10 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2

14e777374abe234fc51facb9c3b14bf0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
14e777374abe234fc51facb9c3b14bf0 34b7d7134bbd213fb5df1cb9c3b14bf0 14e37b3d41b32b4dc113abbd31b1db10 34b733b3db1db3db3d31bdd133b1db10

(你好 | yo)
14e777374abe234fc51facb9c3b14bf0 13eb7d313abed31bc31badb3cbbd41f0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2

(or)
14e777374abe234fc51facb9c3b14bf0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
14e777374abe234fc51facb9c3b14bf0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
34b7d7134bbd213fb5df1cb9c3b14bf0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
14e37b3d41b32b4dc113abbd31b1db10 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
34b733b3db1db3db3d31bdd133b1db10 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 6 sm2
```

actually, maybe there is no problem with adding meta info for chained answers. nothing wrong with too much meta.

if you answer no to part of a card merge. weird things could happen. so are weird things fine? maybe the whole idea of chaining is not good.

highlight focused word out of all the words? press space multiple times? it's annoying to have to remember all possible answers. that's what a reverse side is for. all possible answers really should be included into one meta. but information should not be lost also.

what if hash question, then combined hash of answers? no, that gets rid of the purpose of duplicating for edits.

#: 常用 :: often use
ahehoeuheouh 2021 2021 ... # 常用
euhonuhnottt 2021 2021 ... # often use

#: 常用 :: often used
ahehoeuheouh 2021 2021 ... # 常用 - same
euhonuhnottt 2021 2021 ... # often use - unused
idnotenotned 2021 2021 ... # often used - different. just copy 常用

alternate is that every answer and question has its own weight.

question is 76%. all answers share 24%. if a card is passed, questions and answers are all bumped up. if the card fails, then they are all bumped down.

if each has it's own weight, it would be easier to determine relationships

with a question, you're testing memorization. with an answer, you're reinforcing links. so should they be separate entities?

the weight/percentage is up to the algorithm.

Q: 13eb7d313abed31bc31badb3cbbd41f0 2022-09-17T03:58:21Z 2021-05-15T05:42:20Z 7 1 +6 sm2
A: 13eb7d313abed31bc31badb3cbbd41f0 2021-05-15T05:42:20Z 7 1 +6

A: 13eb7d313abed31bc31badb3cbbd41f0:4 13eb7d313abed31bc31badb3cbbd41f0 2021-05-15T05:42:20Z 7 1 +6

Base64 anyone?

predict file
YKB4BOBAU5WkkyLdhaah YKB4BOBAU5WkkyLdhaah 2020-11-21T03:47:12Z 2020-11-21T03:47:12Z 4 1 3 sm2

outcome file
YKB4BOBAU5WkkyLdhaah YKB4BOBAU5WkkyLdhaah 2020-11-21T03:47:12Z 4 1 3 1

answer hash is all answers put together. chaining isn't a thing.


## New thought
What if I deprecate the `|` symbol? I mostly use the "::" anyways. If I do that, then the syntax is cleaner, and there could be a keybinding to exclude that thing.
